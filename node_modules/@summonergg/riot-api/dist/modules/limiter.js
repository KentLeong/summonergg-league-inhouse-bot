"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.api = exports.bottleneck = void 0;
const tslib_1 = require("tslib");
const bottleneck_1 = tslib_1.__importDefault(require("bottleneck"));
const axios_1 = tslib_1.__importDefault(require("axios"));
const static_1 = require("./static");
const bottleneck = () => {
    var _a;
    const RIOT_ID = process.env.RIOT_ID;
    const RIOT_RATE = process.env.RIOT_RATE;
    const RIOT_HOST = process.env.RIOT_HOST;
    const RIOT_PORT = process.env.RIOT_PORT;
    return new bottleneck_1.default({
        datastore: "redis",
        clearDatastore: false,
        clientOptions: {
            host: RIOT_HOST !== null && RIOT_HOST !== void 0 ? RIOT_HOST : "127.0.0.1",
            port: RIOT_PORT !== null && RIOT_PORT !== void 0 ? RIOT_PORT : 6379
        },
        minTime: (_a = (1000 / (+RIOT_RATE))) !== null && _a !== void 0 ? _a : (1000 / .83),
        id: RIOT_ID !== null && RIOT_ID !== void 0 ? RIOT_ID : "riot-api"
    });
};
exports.bottleneck = bottleneck;
const api = (url, options) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {
    var _a, _b;
    const limiter = exports.bottleneck();
    const RIOT_API_KEY = process.env.RIOT_API_KEY;
    const RIOT_REGION = process.env.RIOT_REGION;
    const RIOT_ID = process.env.RIOT_ID;
    var region = (_a = options.region) !== null && _a !== void 0 ? _a : RIOT_REGION;
    var params = {
        params: Object.assign({ api_key: (_b = options.api_token) !== null && _b !== void 0 ? _b : RIOT_API_KEY }, options)
    };
    limiter.id = `${RIOT_ID}-${region}`;
    var res = yield limiter.schedule(() => axios_1.default.get(`https://${static_1.endpoints[region].domain}${url}`, params));
    return res;
});
exports.api = api;
//# sourceMappingURL=limiter.js.map