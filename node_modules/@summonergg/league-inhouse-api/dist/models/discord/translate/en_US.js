"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.en_US = void 0;
const tslib_1 = require("tslib");
const discord_js_1 = tslib_1.__importDefault(require("discord.js"));
const en_US = (msg) => {
    return (id, args) => {
        var prefix = msg.server.prefix;
        var res = {
            200: "region cannot be empty",
            201: `\`${args === null || args === void 0 ? void 0 : args.region}\` is not a valid region`,
            202: "name cannot be empty",
            203: "league characters have no more than 16 characters",
            204: `The summoner name \`${args === null || args === void 0 ? void 0 : args.name}\` does not exist`,
            205: `The summoner name \`${args === null || args === void 0 ? void 0 : args.name}\` is already being used by someone else`,
            206: `Could not find a token, please signup with the command \`${prefix}signup\``,
            207: `Profile icons did not match, please change it`,
            208: `Could not find a profile for this discord. Please signup with \`${prefix}signup\``,
            209: `There is no game being hosted in the channel`,
            210: `There is no available Lobby bot to host game`,
            211: "You do not have a summoner binded to your account",
            212: "Could not create a new game",
            213: "You are already in a game",
            214: "There is already a game being hosted in this channel",
            215: "This channel is not set to host games, please use the designated host channels",
            300: `Please change your league icon to the image on the right. After you are done, type the command \`${prefix}verify\``
        };
        if (id === 300) {
            var message = new discord_js_1.default.MessageEmbed({
                type: "rich",
                description: "",
            });
            message.attachFiles([`src/assets/profileIcons/${args.token.profileIconId}.png`]);
            message.setThumbnail(`attachment://${args.token.profileIconId}.png`);
            message.description += res[id];
            msg.reply(message);
            return res[id];
        }
        else if (id >= 350) {
        }
        else if (id >= 200) {
            msg.reply(res[id]).then((data) => {
                setTimeout(() => {
                    if (data.deletable)
                        data.delete();
                }, 5000);
            });
            return res[id];
        }
        else {
            msg.reply(res[id]);
            return res[id];
        }
    };
};
exports.en_US = en_US;
//# sourceMappingURL=en_US.js.map