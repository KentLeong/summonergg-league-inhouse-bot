import * as dotenv from "dotenv";
dotenv.config();
import * as c from "chalk";
const chalk = new c.Instance;

const log = {
  title(message: string) {
    if (process.env.DEV == "false") return;
    console.log(chalk.bold(message))
  },
  success(message: string) {
    if (process.env.DEV == "false") return;
    var status = chalk.green("success ");
    console.log(status+message);
  },
  warning(message: string) {
    if (process.env.DEV == "false") return;
    var status = chalk.yellow("warning ");
    console.log(status+message);
  },
  info(message: string) {
    if (process.env.DEV == "false") return;
    var status = chalk.blue("info ");
    console.log(status+message);
  },
  error(message: string) {
    if (process.env.DEV == "false") return;
    var status = chalk.red("error ");
    console.log(status+message);
  },
  complete(message: string) {
    if (process.env.DEV == "false") return;
    var status = chalk.magenta("complete ");
    console.log(status+message);
  },
  group(messages: Array<string>) {
    if (process.env.DEV == "false") return;
    var branch = "├─"
    var end = "└─"
    for (let i = 0; i < messages.length; i++) {
      if (i+1 === messages.length) return console.log(end + " " + messages[i]);
      console.log(branch + " " + messages[i]);
    }
  },
  branch(message:string) {
    if (process.env.DEV == "false") return;
    console.log("├─ "+message);
  },
  openBranch(message:string) {
    if (process.env.DEV == "false") return;
    console.log("├  "+message);
  },
  endBranch(message:string) {
    if (process.env.DEV == "false") return;
    console.log("└─ "+message);
  }
}

export { log };